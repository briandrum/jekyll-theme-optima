// Placeholder to allow defining custom styles that override everything else.
// (Use `_sass/optima/custom-tokens.scss` to override variable defaults)

.u-spaceStackLarge > * + * {
  margin-top: 32px;
}

.Markdown :is(h1, h2, h3, p):first-child {
  margin-top: 0;
}

.Aside {
  background-color: var(--slate2);
  border-radius: 8px;
  color: var(--slate11);
  font-size: small;
  line-height: 1.5em;
  margin: -1em;
  padding: 1em;
}

.Aside + .Aside {
  margin-top: 3em;
}

.BlankSlate {
  align-items: center;
  border-color: var(--slate4);
  border-radius: 8px;
  border-style: solid;
  border-width: 1px;
  color: var(--slate10);
  display: flex;
  justify-content: center;
  padding: 1em;
  min-height: 240px;
}

.Details {
  margin-left: -0.75em;
  padding-left: 0.75em;
}

.Details-summary {
  cursor: default;
  font-size: small;
  font-weight: 700;
  line-height: 1.5em;
  -webkit-user-select: none;
          user-select: none;
}

.Details-details {
  margin-top: 1em;
  padding-left: 1em;
}

.DescriptionList-term {
  font-size: small;
  font-weight: 600;
  line-height: 1.25em;
}

.DescriptionList-description {
  font-size: small;
  line-height: 1.5em;
}

.DescriptionList-description p + p {
  margin-top: 0.25em;
}

.DescriptionList-term + .DescriptionList-description {
  margin-top: 0.25em;
}

.DescriptionList-description + .DescriptionList-description {
  margin-top: 0.5em;
}

.DescriptionList-description + .DescriptionList-term {
  margin-top: 1em;
}

.Kbd {
  background-color: var(--kbd-backgroundColor);
  border-color: var(--kbd-borderColor);
  border-radius: var(--kbd-borderRadius);
  border-style: var(--kbd-borderStyle);
  border-width: var(--kbd-borderWidth);
  color: var(--kbd-color);
  font-size: var(--kbd-fontSize);
  letter-spacing: var(--kbd-letterSpacing);
  padding: var(--kbd-padding);
  white-space: var(--kbd-whiteSpace);
}

.Markdown kbd {
  background-color: var(--kbd-backgroundColor);
  border-color: var(--kbd-borderColor);
  border-radius: var(--kbd-borderRadius);
  border-style: var(--kbd-borderStyle);
  border-width: var(--kbd-borderWidth);
  color: var(--kbd-color);
  font-size: var(--kbd-fontSize);
  letter-spacing: var(--kbd-letterSpacing);
  padding: var(--kbd-padding);
  white-space: var(--kbd-whiteSpace);
}

.Form {
}

.TextInput {
  background-color: var(--slate1);
  border-color: currentColor;
  border-style: solid;
  border-width: 1px;
}

.InputGroup > * + * {
  margin-left: -1px;
}

.SearchResults {
  list-style-type: none;
}

.SearchResults-result + .SearchResults-result {
  margin-top: 1.5em;
}

.SearchResults-link {
  border-radius: 0.25em;
  color: inherit !important;
  display: block;
  margin: -1em 0  -1em -1em;
  padding: 1em 0 1em 1em;
  transition: background-color ease-in-out 0.2s;
}

.SearchResults-link:hover,
.SearchResults-link:focus {
  background-color: var(--blueA2);
}

.SearchResults-url {
  align-items: center;
  display: flex;
  font-size: small;
  font-style: normal;
  line-height: 1.5em;
}

.SearchResults-url::before {
  content: url(/favicon.svg);
  display: block;
  height: 1.5em;
  margin-right: 0.5em;
  width: 1.5em;
}

.SearchResults-title {
  font-size: large;
  font-style: normal;
  font-weight: normal;
  margin-top: 0.25em;
}

.SearchResults-description {
  color: var(--slate12);
  font-size: small;
  font-style: normal;
  line-height: 1.5em;
  margin-top: 0.25em;
  max-width: 48em;
}
